{"version":3,"file":"index.cjs","sources":["../native.js","../util/when.js","../write.js","../level.js","../caching.js","../util/ArrayLikeIterable.js","../keys.js","../read.js","../index.js","../node-index.js"],"sourcesContent":["export let Env, Compression, Cursor, getAddress, getAddressShared, setGlobalBuffer, require, arch, fs;\r\nexport function setNativeFunctions(nativeInterface) {\r\n\tEnv = nativeInterface.Env;\r\n\tCompression = nativeInterface.Compression;\r\n\tgetAddress = nativeInterface.getAddress;\r\n    getAddressShared = nativeInterface.getAddressShared;\r\n    setGlobalBuffer = nativeInterface.setGlobalBuffer;\r\n    Cursor = nativeInterface.Cursor;\r\n    require = nativeInterface.require;\r\n    arch = nativeInterface.arch;\r\n    fs = nativeInterface.fs;\r\n}\r\n","export function when(promise, callback, errback) {\r\n  if (promise && promise.then) {\r\n    return errback ?\r\n      promise.then(callback, errback) :\r\n      promise.then(callback);\r\n  }\r\n  return callback(promise);\r\n}\r\n","import { getAddressShared as getAddress } from './native.js';\r\nimport { when } from './util/when.js';\r\nvar backpressureArray;\r\n\r\nconst MAX_KEY_SIZE = 1978;\r\nconst WAITING_OPERATION = 0x2000000;\r\nconst BACKPRESSURE_THRESHOLD = 50000;\r\nconst TXN_DELIMITER = 0x8000000;\r\nconst TXN_COMMITTED = 0x10000000;\r\nconst TXN_FLUSHED = 0x20000000;\r\nconst TXN_FAILED = 0x40000000;\r\nconst FAILED_CONDITION = 0x4000000;\r\nconst REUSE_BUFFER_MODE = 1000;\r\nexport const binaryBuffer = Symbol('binaryBuffer');\r\n\r\nconst SYNC_PROMISE_SUCCESS = Promise.resolve(true);\r\nconst SYNC_PROMISE_FAIL = Promise.resolve(false);\r\nexport const ABORT = {};\r\nconst CALLBACK_THREW = {};\r\nSYNC_PROMISE_SUCCESS.isSync = true;\r\nSYNC_PROMISE_FAIL.isSync = true;\r\nconst ByteArray = typeof Buffer != 'undefined' ? Buffer.from : Uint8Array;\r\n//let debugLog = []\r\n\r\nvar log = [];\r\nexport function addWriteMethods(LMDBStore, { env, fixedBuffer, resetReadTxn, useWritemap,\r\n\teventTurnBatching, txnStartThreshold, batchStartThreshold, overlappingSync, commitDelay, separateFlushed }) {\r\n\t//  stands for write instructions\r\n\tvar dynamicBytes;\r\n\tfunction allocateInstructionBuffer() {\r\n\t\tlet buffer = new SharedArrayBuffer(0x10000); // Must use a shared buffer to ensure GC doesn't move it around\r\n\t\tdynamicBytes = new ByteArray(buffer);\r\n\t\tlet uint32 = dynamicBytes.uint32 = new Uint32Array(buffer, 0, 0x10000 >> 2);\r\n\t\tuint32[0] = 0;\r\n\t\tdynamicBytes.float64 = new Float64Array(buffer, 0, 0x10000 >> 3);\r\n\t\tbuffer.address = getAddress(buffer);\r\n\t\tuint32.address = buffer.address + uint32.byteOffset;\r\n\t\tdynamicBytes.position = 0;\r\n\t\treturn dynamicBytes;\r\n\t}\r\n\tvar outstandingWriteCount = 0;\r\n\tvar startAddress = 0;\r\n\tvar writeTxn = null;\r\n\tvar abortedNonChildTransactionWarn;\r\n\tvar nextTxnCallbacks = [];\r\n\tvar commitPromise, flushPromise, flushResolvers = [];\r\n\tcommitDelay = commitDelay || 0;\r\n\teventTurnBatching = eventTurnBatching === false ? false : true;\r\n\tvar enqueuedCommit;\r\n\tvar afterCommitCallbacks = [];\r\n\tvar beforeCommitCallbacks = [];\r\n\tvar enqueuedEventTurnBatch;\r\n\tif (separateFlushed === undefined)\r\n\t\tseparateFlushed = overlappingSync;\r\n\tvar batchDepth = 0;\r\n\tvar writeBatchStart, outstandingBatchCount;\r\n\ttxnStartThreshold = txnStartThreshold || 5;\r\n\tbatchStartThreshold = batchStartThreshold || 1000;\r\n\r\n\tallocateInstructionBuffer();\r\n\tdynamicBytes.uint32[0] = TXN_DELIMITER | TXN_COMMITTED | TXN_FLUSHED;\r\n\tvar txnResolution, lastQueuedResolution, nextResolution = { uint32: dynamicBytes.uint32, flagPosition: 0, };\r\n\tvar uncommittedResolution = { next: nextResolution };\r\n\tvar unwrittenResolution = nextResolution;\r\n\tfunction writeInstructions(flags, store, key, value, version, ifVersion) {\r\n\t\tlet writeStatus;\r\n\t\tlet targetBytes, position;\r\n\t\tlet valueBuffer, valueSize, valueBufferStart;\r\n\t\tif (flags & 2) {\r\n\t\t\t// encode first in case we have to write a shared structure\r\n\t\t\tlet encoder = store.encoder;\r\n\t\t\tif (value && value[binaryBuffer])\r\n\t\t\t\tvalueBuffer = value[binaryBuffer];\r\n\t\t\telse if (encoder) {\r\n\t\t\t\tif (encoder.copyBuffers) // use this as indicator for support buffer reuse for now\r\n\t\t\t\t\tvalueBuffer = encoder.encode(value, REUSE_BUFFER_MODE);\r\n\t\t\t\telse { // various other encoders, including JSON.stringify, that might serialize to a string\r\n\t\t\t\t\tvalueBuffer = encoder.encode(value);\r\n\t\t\t\t\tif (typeof valueBuffer == 'string')\r\n\t\t\t\t\t\tvalueBuffer = Buffer.from(valueBuffer); // TODO: Would be nice to write strings inline in the instructions\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof value == 'string') {\r\n\t\t\t\tvalueBuffer = Buffer.from(value); // TODO: Would be nice to write strings inline in the instructions\r\n\t\t\t} else if (value instanceof Uint8Array)\r\n\t\t\t\tvalueBuffer = value;\r\n\t\t\telse\r\n\t\t\t\tthrow new Error('Invalid value to put in database ' + value + ' (' + (typeof value) +'), consider using encoder');\r\n\t\t\tvalueBufferStart = valueBuffer.start;\r\n\t\t\tif (valueBufferStart > -1) // if we have buffers with start/end position\r\n\t\t\t\tvalueSize = valueBuffer.end - valueBufferStart; // size\r\n\t\t\telse\r\n\t\t\t\tvalueSize = valueBuffer.length;\r\n\t\t\tif (store.dupSort && valueSize > MAX_KEY_SIZE)\r\n\t\t\t\tthrow new Error('The value is larger than the maximum size (' + MAX_KEY_SIZE + ') for a value in a dupSort database');\r\n\t\t} else\r\n\t\t\tvalueSize = 0;\r\n\t\tif (writeTxn) {\r\n\t\t\ttargetBytes = fixedBuffer;\r\n\t\t\tposition = 0;\r\n\t\t} else {\r\n\t\t\tif (eventTurnBatching && !enqueuedEventTurnBatch && batchDepth == 0) {\r\n\t\t\t\tenqueuedEventTurnBatch = setImmediate(() => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tfor (let i = 0, l = beforeCommitCallbacks.length; i < l; i++) {\r\n\t\t\t\t\t\t\tbeforeCommitCallbacks[i]();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tenqueuedEventTurnBatch = null;\r\n\t\t\t\t\t//console.log('ending event turn')\r\n\t\t\t\t\tbatchDepth--;\r\n\t\t\t\t\tfinishBatch();\r\n\t\t\t\t\tif (writeBatchStart)\r\n\t\t\t\t\t\twriteBatchStart(); // TODO: When we support delay start of batch, optionally don't delay this\r\n\t\t\t\t});\r\n\t\t\t\tcommitPromise = null; // reset the commit promise, can't know if it is really a new transaction prior to finishWrite being called\r\n\t\t\t\tflushPromise = null;\r\n\t\t\t\twriteBatchStart = writeInstructions(1, store);\r\n\t\t\t\toutstandingBatchCount = 0;\r\n\t\t\t\tbatchDepth++;\r\n\t\t\t}\r\n\t\t\ttargetBytes = dynamicBytes;\r\n\t\t\tposition = targetBytes.position;\r\n\t\t}\r\n\t\tlet uint32 = targetBytes.uint32, float64 = targetBytes.float64;\r\n\t\tlet flagPosition = position << 1; // flagPosition is the 32-bit word starting position\r\n\r\n\t\t// don't increment position until we are sure we don't have any key writing errors\r\n\t\tif (!uint32) {\r\n\t\t\tthrow new Error('Internal buffers have been corrupted');\r\n\t\t}\r\n\t\tuint32[flagPosition + 1] = store.db.dbi;\r\n\t\tif (flags & 4) {\r\n\t\t\tlet keyStartPosition = (position << 3) + 12;\r\n\t\t\tlet endPosition;\r\n\t\t\ttry {\r\n\t\t\t\tendPosition = store.writeKey(key, targetBytes, keyStartPosition);\r\n\t\t\t} catch(error) {\r\n\t\t\t\ttargetBytes.fill(0, keyStartPosition);\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t\tlet keySize = endPosition - keyStartPosition;\r\n\t\t\tif (keySize > MAX_KEY_SIZE) {\r\n\t\t\t\ttargetBytes.fill(0, keyStartPosition); // restore zeros\r\n\t\t\t\tthrow new Error('Key size is larger than the maximum key size (' + MAX_KEY_SIZE + ')');\r\n\t\t\t}\r\n\t\t\tuint32[flagPosition + 2] = keySize;\r\n\t\t\tposition = (endPosition + 16) >> 3;\r\n\t\t\tif (flags & 2) {\r\n\t\t\t\tlet mustCompress;\r\n\t\t\t\tif (valueBufferStart > -1) { // if we have buffers with start/end position\r\n\t\t\t\t\t// record pointer to value buffer\r\n\t\t\t\t\tfloat64[position] = (valueBuffer.address ||\r\n\t\t\t\t\t\t(valueBuffer.address = getAddress(valueBuffer.buffer) + valueBuffer.byteOffset)) + valueBufferStart;\r\n\t\t\t\t\tmustCompress = valueBuffer[valueBufferStart] >= 250; // this is the compression indicator, so we must compress\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet valueArrayBuffer = valueBuffer.buffer;\r\n\t\t\t\t\t// record pointer to value buffer\r\n\t\t\t\t\tfloat64[position] = (valueArrayBuffer.address ||\r\n\t\t\t\t\t\t(valueArrayBuffer.address = getAddress(valueArrayBuffer))) + valueBuffer.byteOffset;\r\n\t\t\t\t\tmustCompress = valueBuffer[0] >= 250; // this is the compression indicator, so we must compress\r\n\t\t\t\t}\r\n\t\t\t\tuint32[(position++ << 1) - 1] = valueSize;\r\n\t\t\t\tif (store.compression && (valueSize >= store.compression.threshold || mustCompress)) {\r\n\t\t\t\t\tflags |= 0x100000;\r\n\t\t\t\t\tfloat64[position] = store.compression.address;\r\n\t\t\t\t\tif (!writeTxn)\r\n\t\t\t\t\t\tenv.compress(uint32.address + (position << 3), () => {\r\n\t\t\t\t\t\t\t// this is never actually called, just use to pin the buffer in memory until it is finished\r\n\t\t\t\t\t\t\tconsole.log(float64);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ifVersion !== undefined) {\r\n\t\t\t\tif (ifVersion === null)\r\n\t\t\t\t\tflags |= 0x10;\r\n\t\t\t\telse {\r\n\t\t\t\t\tflags |= 0x100;\r\n\t\t\t\t\tfloat64[position++] = ifVersion;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (version !== undefined) {\r\n\t\t\t\tflags |= 0x200;\r\n\t\t\t\tfloat64[position++] = version || 0;\r\n\t\t\t}\r\n\t\t} else\r\n\t\t\tposition++;\r\n\t\ttargetBytes.position = position;\r\n\t\t//console.log('js write', (targetBytes.buffer.address + (flagPosition << 2)).toString(16), flags.toString(16))\r\n\t\tif (writeTxn) {\r\n\t\t\tuint32[0] = flags;\r\n\t\t\tenv.write(uint32.address);\r\n\t\t\treturn () => (uint32[0] & FAILED_CONDITION) ? SYNC_PROMISE_FAIL : SYNC_PROMISE_SUCCESS;\r\n\t\t}\r\n\t\t// if we ever use buffers that haven't been zero'ed, need to clear out the next slot like this:\r\n\t\t// uint32[position << 1] = 0 // clear out the next slot\r\n\t\tlet nextUint32;\r\n\t\tif (position > 0x1e00) { // 61440 bytes\r\n\t\t\t// make new buffer and make pointer to it\r\n\t\t\tlet lastPosition = position;\r\n\t\t\ttargetBytes = allocateInstructionBuffer();\r\n\t\t\tposition = targetBytes.position;\r\n\t\t\tfloat64[lastPosition + 1] = targetBytes.uint32.address + position;\r\n\t\t\tuint32[lastPosition << 1] = 3; // pointer instruction\r\n\t\t\t//console.log('pointer from ', (lastFloat64.buffer.address + (lastPosition << 3)).toString(16), 'to', (targetBytes.buffer.address + position).toString(16), 'flag position', (uint32.buffer.address + (flagPosition << 2)).toString(16))\r\n\t\t\tnextUint32 = targetBytes.uint32;\r\n\t\t} else\r\n\t\t\tnextUint32 = uint32;\r\n\t\tlet resolution = nextResolution;\r\n\t\t// create the placeholder next resolution\r\n\t\tnextResolution = resolution.next = store.cache ?\r\n\t\t{\r\n\t\t\tuint32: nextUint32,\r\n\t\t\tflagPosition: position << 1,\r\n\t\t\tflag: 0, // TODO: eventually eliminate this, as we can probably signify success by zeroing the flagPosition\r\n\t\t\tvalueBuffer: fixedBuffer, // these are all just placeholders so that we have the right hidden class initially allocated\r\n\t\t\tnext: null,\r\n\t\t\tkey,\r\n\t\t\tstore,\r\n\t\t\tvalueSize,\r\n\t\t} :\r\n\t\t{\r\n\t\t\tuint32: nextUint32,\r\n\t\t\tflagPosition: position << 1,\r\n\t\t\tflag: 0, // TODO: eventually eliminate this, as we can probably signify success by zeroing the flagPosition\r\n\t\t\tvalueBuffer: fixedBuffer, // these are all just placeholders so that we have the right hidden class initially allocated\r\n\t\t\tnext: null,\r\n\t\t};\r\n\t\tlet writtenBatchDepth = batchDepth;\r\n\r\n\t\treturn (callback) => {\r\n\t\t\tif (writtenBatchDepth) {\r\n\t\t\t\t// if we are in a batch, the transaction can't close, so we do the faster,\r\n\t\t\t\t// but non-deterministic updates, knowing that the write thread can\r\n\t\t\t\t// just poll for the status change if we miss a status update\r\n\t\t\t\twriteStatus = uint32[flagPosition];\r\n\t\t\t\tuint32[flagPosition] = flags;\r\n\t\t\t\t//writeStatus = Atomics.or(uint32, flagPosition, flags)\r\n\t\t\t\tif (writeBatchStart && !writeStatus) {\r\n\t\t\t\t\toutstandingBatchCount += 1 + (valueSize >> 12);\r\n\t\t\t\t\t//console.log(outstandingBatchCount, batchStartThreshold)\r\n\t\t\t\t\tif (outstandingBatchCount > batchStartThreshold) {\r\n\t\t\t\t\t\toutstandingBatchCount = 0;\r\n\t\t\t\t\t\twriteBatchStart();\r\n\t\t\t\t\t\twriteBatchStart = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else // otherwise the transaction could end at any time and we need to know the\r\n\t\t\t\t// deterministically if it is ending, so we can reset the commit promise\r\n\t\t\t\t// so we use the slower atomic operation\r\n\t\t\t\twriteStatus = Atomics.or(uint32, flagPosition, flags);\r\n\t\r\n\t\t\toutstandingWriteCount++;\r\n\t\t\tif (writeStatus & TXN_DELIMITER) {\r\n\t\t\t\t//console.warn('Got TXN delimiter', ( uint32.address + (flagPosition << 2)).toString(16))\r\n\t\t\t\tcommitPromise = null; // TODO: Don't reset these if this comes from the batch start operation on an event turn batch\r\n\t\t\t\tflushPromise = null;\r\n\t\t\t\tqueueCommitResolution(resolution);\r\n\t\t\t\tif (!startAddress) {\r\n\t\t\t\t\tstartAddress = uint32.address + (flagPosition << 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!flushPromise && overlappingSync && separateFlushed)\r\n\t\t\t\tflushPromise = new Promise(resolve => flushResolvers.push(resolve));\r\n\t\t\tif (writeStatus & WAITING_OPERATION) { // write thread is waiting\r\n\t\t\t\t//console.log('resume batch thread', uint32.buffer.address + (flagPosition << 2))\r\n\t\t\t\tenv.write(0);\r\n\t\t\t}\r\n\t\t\tif (outstandingWriteCount > BACKPRESSURE_THRESHOLD) {\r\n\t\t\t\tif (!backpressureArray)\r\n\t\t\t\t\tbackpressureArray = new Int32Array(new SharedArrayBuffer(4), 0, 1);\r\n\t\t\t\tAtomics.wait(backpressureArray, 0, 0, Math.round(outstandingWriteCount / BACKPRESSURE_THRESHOLD));\r\n\t\t\t}\r\n\t\t\tif (startAddress) {\r\n\t\t\t\tif (eventTurnBatching)\r\n\t\t\t\t\tstartWriting(); // start writing immediately because this has already been batched/queued\r\n\t\t\t\telse if (!enqueuedCommit && txnStartThreshold) {\r\n\t\t\t\t\tenqueuedCommit = commitDelay == 0 ? setImmediate(() => startWriting()) : setTimeout(() => startWriting(), commitDelay);\r\n\t\t\t\t} else if (outstandingWriteCount > txnStartThreshold)\r\n\t\t\t\t\tstartWriting();\r\n\t\t\t}\r\n\r\n\t\t\tif ((outstandingWriteCount & 7) === 0)\r\n\t\t\t\tresolveWrites();\r\n\t\t\t\r\n\t\t\tif (store.cache) {\r\n\t\t\t\tresolution.key = key;\r\n\t\t\t\tresolution.store = store;\r\n\t\t\t\tresolution.valueSize = valueBuffer ? valueBuffer.length : 0;\r\n\t\t\t}\r\n\t\t\tresolution.valueBuffer = valueBuffer;\r\n\t\t\tlastQueuedResolution = resolution;\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tresolution.reject = callback;\r\n\t\t\t\tresolution.resolve = (value) => callback(null, value);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (ifVersion === undefined) {\r\n\t\t\t\tif (writtenBatchDepth > 1)\r\n\t\t\t\t\treturn SYNC_PROMISE_SUCCESS; // or return undefined?\r\n\t\t\t\tif (!commitPromise) {\r\n\t\t\t\t\tcommitPromise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tresolution.resolve = resolve;\r\n\t\t\t\t\t\tresolution.reject = reject;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (separateFlushed)\r\n\t\t\t\t\t\tcommitPromise.flushed = overlappingSync ? flushPromise : commitPromise;\r\n\t\t\t\t}\r\n\t\t\t\treturn commitPromise;\r\n\t\t\t}\r\n\t\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\t\tresolution.resolve = resolve;\r\n\t\t\t\tresolution.reject = reject;\r\n\t\t\t});\r\n\t\t\tif (separateFlushed)\r\n\t\t\t\tpromise.flushed = overlappingSync ? flushPromise : promise;\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t}\r\n\tfunction startWriting() {\r\n\t\t//console.log('start address ' + startAddress.toString(16), store.name)\r\n\t\tif (enqueuedCommit) {\r\n\t\t\tclearImmediate(enqueuedCommit);\r\n\t\t\tenqueuedCommit = null;\r\n\t\t}\r\n\t\tlet resolvers = flushResolvers;\r\n\t\tflushResolvers = [];\r\n\t\tenv.startWriting(startAddress, (status) => {\r\n\t\t\t//console.log('finished batch', store.name)\r\n\t\t\tif (dynamicBytes.uint32[dynamicBytes.position << 1] & TXN_DELIMITER)\r\n\t\t\t\tqueueCommitResolution(nextResolution);\r\n\r\n\t\t\tresolveWrites(true);\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tfor (let i = 0; i < resolvers.length; i++)\r\n\t\t\t\t\t\tresolvers[i]();\r\n\t\t\t\tcase 1:\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\texecuteTxnCallbacks();\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\tconsole.error(status);\r\n\t\t\t\tif (commitRejectPromise) {\r\n\t\t\t\t\tcommitRejectPromise.reject(status);\r\n\t\t\t\t\tcommitRejectPromise = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tstartAddress = 0;\r\n\t}\r\n\r\n\tfunction queueCommitResolution(resolution) {\r\n\t\tif (!resolution.isTxn) {\r\n\t\t\tresolution.isTxn = true;\r\n\t\t\tif (txnResolution) {\r\n\t\t\t\ttxnResolution.nextTxn = resolution;\r\n\t\t\t\t//outstandingWriteCount = 0\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttxnResolution = resolution;\r\n\t\t}\r\n\t}\r\n\tvar TXN_DONE = (separateFlushed ? TXN_COMMITTED : TXN_FLUSHED) | TXN_FAILED;\r\n\tfunction resolveWrites(async) {\r\n\t\t// clean up finished instructions\r\n\t\tlet instructionStatus;\r\n\t\twhile ((instructionStatus = unwrittenResolution.uint32[unwrittenResolution.flagPosition])\r\n\t\t\t\t& 0x1000000) {\r\n\t\t\t//console.log('instructionStatus: ' + instructionStatus.toString(16))\r\n\t\t\tif (unwrittenResolution.callbacks) {\r\n\t\t\t\tnextTxnCallbacks.push(unwrittenResolution.callbacks);\r\n\t\t\t\tunwrittenResolution.callbacks = null;\r\n\t\t\t}\r\n\t\t\tif (!unwrittenResolution.isTxn)\r\n\t\t\t\tunwrittenResolution.uint32 = null;\r\n\t\t\tunwrittenResolution.valueBuffer = null;\r\n\t\t\tunwrittenResolution.flag = instructionStatus;\r\n\t\t\toutstandingWriteCount--;\r\n\t\t\tunwrittenResolution = unwrittenResolution.next;\r\n\t\t}\r\n\t\twhile (txnResolution &&\r\n\t\t\t(instructionStatus = txnResolution.uint32[txnResolution.flagPosition] & TXN_DONE)) {\r\n\t\t\tif (instructionStatus & TXN_FAILED)\r\n\t\t\t\trejectCommit();\r\n\t\t\telse\r\n\t\t\t\tresolveCommit(async);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resolveCommit(async) {\r\n\t\tafterCommit();\r\n\t\tif (async)\r\n\t\t\tresetReadTxn();\r\n\t\telse\r\n\t\t\tqueueMicrotask(resetReadTxn); // TODO: only do this if there are actually committed writes?\r\n\t\tdo {\r\n\t\t\tif (uncommittedResolution.resolve) {\r\n\t\t\t\tlet flag = uncommittedResolution.flag;\r\n\t\t\t\tif (flag < 0)\r\n\t\t\t\t\tuncommittedResolution.reject(new Error(\"Error occurred in write\"));\r\n\t\t\t\telse if (flag & FAILED_CONDITION) {\r\n\t\t\t\t\tuncommittedResolution.resolve(false);\r\n\t\t\t\t} else\r\n\t\t\t\t\tuncommittedResolution.resolve(true);\r\n\t\t\t}\r\n\t\t} while((uncommittedResolution = uncommittedResolution.next) && uncommittedResolution != txnResolution)\r\n\t\ttxnResolution = txnResolution.nextTxn;\r\n\t}\r\n\tvar commitRejectPromise;\r\n\tfunction rejectCommit() {\r\n\t\tafterCommit();\r\n\t\tif (!commitRejectPromise) {\r\n\t\t\tlet rejectFunction;\r\n\t\t\tcommitRejectPromise = new Promise((resolve, reject) => rejectFunction = reject);\r\n\t\t\tcommitRejectPromise.reject = rejectFunction;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (uncommittedResolution.reject) {\r\n\t\t\t\tlet flag = uncommittedResolution.flag & 0xf;\r\n\t\t\t\tlet error = new Error(\"Commit failed (see commitError for details)\");\r\n\t\t\t\terror.commitError = commitRejectPromise;\r\n\t\t\t\tuncommittedResolution.reject(error);\r\n\t\t\t}\r\n\t\t} while((uncommittedResolution = uncommittedResolution.next) && uncommittedResolution != txnResolution)\r\n\t\ttxnResolution = txnResolution.nextTxn;\r\n\t}\r\n\tfunction atomicStatus(uint32, flagPosition, newStatus) {\r\n\t\tif (batchDepth) {\r\n\t\t\t// if we are in a batch, the transaction can't close, so we do the faster,\r\n\t\t\t// but non-deterministic updates, knowing that the write thread can\r\n\t\t\t// just poll for the status change if we miss a status update\r\n\t\t\tlet writeStatus = uint32[flagPosition];\r\n\t\t\tuint32[flagPosition] = newStatus;\r\n\t\t\treturn writeStatus;\r\n\t\t\t//return Atomics.or(uint32, flagPosition, newStatus)\r\n\t\t} else // otherwise the transaction could end at any time and we need to know the\r\n\t\t\t// deterministically if it is ending, so we can reset the commit promise\r\n\t\t\t// so we use the slower atomic operation\r\n\t\t\treturn Atomics.or(uint32, flagPosition, newStatus);\r\n\t}\r\n\tfunction afterCommit() {\r\n\t\tfor (let i = 0, l = afterCommitCallbacks.length; i < l; i++) {\r\n\t\t\tafterCommitCallbacks[i]({ next: uncommittedResolution, last: unwrittenResolution});\r\n\t\t}\r\n\t}\r\n\tasync function executeTxnCallbacks() {\r\n\t\tenv.writeTxn = writeTxn = {};\r\n\t\tlet promises;\r\n\t\tlet txnCallbacks;\r\n\t\tfor (let i = 0, l = nextTxnCallbacks.length; i < l; i++) {\r\n\t\t\ttxnCallbacks = nextTxnCallbacks[i];\r\n\t\t\tfor (let i = 0, l = txnCallbacks.length; i < l; i++) {\r\n\t\t\t\tlet userTxnCallback = txnCallbacks[i];\r\n\t\t\t\tlet asChild = userTxnCallback.asChild;\r\n\t\t\t\tif (asChild) {\r\n\t\t\t\t\tif (promises) {\r\n\t\t\t\t\t\t// must complete any outstanding transactions before proceeding\r\n\t\t\t\t\t\tawait Promise.all(promises);\r\n\t\t\t\t\t\tpromises = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tenv.beginTxn(1); // abortable\r\n\t\t\t\t\t\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet result = userTxnCallback.callback();\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\tawait result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (result === ABORT)\r\n\t\t\t\t\t\t\tenv.abortTxn();\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tenv.commitTxn();\r\n\t\t\t\t\t\t\ttxnCallbacks[i] = result;\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tenv.abortTxn();\r\n\t\t\t\t\t\ttxnError(error, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet result = userTxnCallback();\r\n\t\t\t\t\t\ttxnCallbacks[i] = result;\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\tif (!promises)\r\n\t\t\t\t\t\t\t\tpromises = [];\r\n\t\t\t\t\t\t\tpromises.push(result.catch(() => {}));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\ttxnError(error, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tnextTxnCallbacks = [];\r\n\t\tif (promises) { // finish any outstanding commit functions\r\n\t\t\tawait Promise.all(promises);\r\n\t\t}\r\n\t\tenv.writeTxn = writeTxn = false;\r\n\t\tfunction txnError(error, i) {\r\n\t\t\t(txnCallbacks.errors || (txnCallbacks.errors = []))[i] = error;\r\n\t\t\ttxnCallbacks[i] = CALLBACK_THREW;\r\n\t\t}\r\n\t}\r\n\tfunction finishBatch() {\r\n\t\tdynamicBytes.uint32[(dynamicBytes.position + 1) << 1] = 0; // clear out the next slot\r\n\t\tlet writeStatus = atomicStatus(dynamicBytes.uint32, (dynamicBytes.position++) << 1, 2); // atomically write the end block\r\n\t\tnextResolution.flagPosition += 2;\r\n\t\tif (writeStatus & WAITING_OPERATION) {\r\n\t\t\tenv.write(0);\r\n\t\t}\r\n\t}\r\n\tObject.assign(LMDBStore.prototype, {\r\n\t\tput(key, value, versionOrOptions, ifVersion) {\r\n\t\t\tlet callback, flags = 15, type = typeof versionOrOptions;\r\n\t\t\tif (type == 'object') {\r\n\t\t\t\tif (versionOrOptions.noOverwrite)\r\n\t\t\t\t\tflags |= 0x10;\r\n\t\t\t\tif (versionOrOptions.noDupData)\r\n\t\t\t\t\tflags |= 0x20;\r\n\t\t\t\tif (versionOrOptions.append)\r\n\t\t\t\t\tflags |= 0x20000;\r\n\t\t\t\tif (versionOrOptions.ifVersion != undefined)\r\n\t\t\t\t\tifVersion = versionsOrOptions.ifVersion;\r\n\t\t\t\tversionOrOptions = versionOrOptions.version;\r\n\t\t\t\tif (typeof ifVersion == 'function')\r\n\t\t\t\t\tcallback = ifVersion;\r\n\t\t\t} else if (type == 'function') {\r\n\t\t\t\tcallback = versionOrOptions;\r\n\t\t\t}\r\n\t\t\treturn writeInstructions(flags, this, key, value, this.useVersions ? versionOrOptions || 0 : undefined, ifVersion)(callback);\r\n\t\t},\r\n\t\tremove(key, ifVersionOrValue, callback) {\r\n\t\t\tlet flags = 13;\r\n\t\t\tlet ifVersion, value;\r\n\t\t\tif (ifVersionOrValue !== undefined) {\r\n\t\t\t\tif (typeof ifVersionOrValue == 'function')\r\n\t\t\t\t\tcallback = ifVersionOrValue;\r\n\t\t\t\telse if (this.useVersions)\r\n\t\t\t\t\tifVersion = ifVersionOrValue;\r\n\t\t\t\telse {\r\n\t\t\t\t\tflags = 14;\r\n\t\t\t\t\tvalue = ifVersionOrValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn writeInstructions(flags, this, key, value, undefined, ifVersion)(callback);\r\n\t\t},\r\n\t\tdel(key, options, callback) {\r\n\t\t\treturn this.remove(key, options, callback);\r\n\t\t},\r\n\t\tifNoExists(key, callback) {\r\n\t\t\treturn this.ifVersion(key, null, callback);\r\n\t\t},\r\n\r\n\t\tifVersion(key, version, callback) {\r\n\t\t\tif (!callback) {\r\n\t\t\t\treturn new Batch((operations, callback) => {\r\n\t\t\t\t\tlet promise = this.ifVersion(key, version, operations);\r\n\t\t\t\t\tif (callback)\r\n\t\t\t\t\t\tpromise.then(callback);\r\n\t\t\t\t\treturn promise;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\tif (this.doesExist(key, version)) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t\treturn SYNC_PROMISE_SUCCESS;\r\n\t\t\t\t}\r\n\t\t\t\treturn SYNC_PROMISE_FAIL;\r\n\t\t\t}\r\n\t\t\tlet finishStartWrite = writeInstructions(typeof key === 'undefined' ? 1 : 4, this, key, undefined, undefined, version);\r\n\t\t\tlet promise;\r\n\t\t\tbatchDepth += 2;\r\n\t\t\tif (batchDepth > 2)\r\n\t\t\t\tpromise = finishStartWrite();\r\n\t\t\telse {\r\n\t\t\t\twriteBatchStart = () => {\r\n\t\t\t\t\tpromise = finishStartWrite();\r\n\t\t\t\t};\r\n\t\t\t\toutstandingBatchCount = 0;\r\n\t\t\t}\r\n\t\t\t//console.warn('wrote start of ifVersion', this.path)\r\n\t\t\ttry {\r\n\t\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 0, l = callback.length; i < l; i++) {\r\n\t\t\t\t\t\tlet operation = callback[i];\r\n\t\t\t\t\t\tthis[operation.type](operation.key, operation.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\t//console.warn('writing end of ifVersion', this.path, (dynamicBytes.buffer.address + ((dynamicBytes.position + 1) << 3)).toString(16))\r\n\t\t\t\tif (!promise) {\r\n\t\t\t\t\tfinishBatch();\r\n\t\t\t\t\tbatchDepth -= 2;\r\n\t\t\t\t\tpromise = finishStartWrite(); // finish write once all the operations have been written (and it hasn't been written prematurely)\r\n\t\t\t\t\twriteBatchStart = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbatchDepth -= 2;\r\n\t\t\t\t\tfinishBatch();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t},\r\n\t\tbatch(callbackOrOperations) {\r\n\t\t\treturn this.ifVersion(undefined, undefined, callbackOrOperations);\r\n\t\t},\r\n\t\tdrop(callback) {\r\n\t\t\treturn writeInstructions(1024 + 12, this, undefined, undefined, undefined, undefined)(callback);\r\n\t\t},\r\n\t\tclearAsync(callback) {\r\n\t\t\tif (this.encoder && this.encoder.structures)\r\n\t\t\t\tthis.encoder.structures = [];\r\n\t\t\treturn writeInstructions(12, this, undefined, undefined, undefined, undefined)(callback);\r\n\t\t},\r\n\t\t_triggerError() {\r\n\t\t\tfinishBatch();\r\n\t\t},\r\n\r\n\t\tputSync(key, value, versionOrOptions, ifVersion) {\r\n\t\t\tif (writeTxn)\r\n\t\t\t\treturn this.put(key, value, versionOrOptions, ifVersion);\r\n\t\t\telse\r\n\t\t\t\treturn this.transactionSync(() =>\r\n\t\t\t\t\tthis.put(key, value, versionOrOptions, ifVersion) == SYNC_PROMISE_SUCCESS,\r\n\t\t\t\t\t{ abortable: false });\r\n\t\t},\r\n\t\tremoveSync(key, ifVersionOrValue) {\r\n\t\t\tif (writeTxn)\r\n\t\t\t\treturn this.remove(key, ifVersionOrValue);\r\n\t\t\telse\r\n\t\t\t\treturn this.transactionSync(() =>\r\n\t\t\t\t\tthis.remove(key, ifVersionOrValue) == SYNC_PROMISE_SUCCESS,\r\n\t\t\t\t\t{ abortable: false });\r\n\t\t},\r\n\t\ttransaction(callback) {\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\t// already nested in a transaction, just execute and return\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\t\t\treturn this.transactionAsync(callback);\r\n\t\t},\r\n\t\tchildTransaction(callback) {\r\n\t\t\tif (useWritemap)\r\n\t\t\t\tthrow new Error('Child transactions are not supported in writemap mode');\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\tenv.beginTxn(1); // abortable\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn when(callback(), (result) => {\r\n\t\t\t\t\t\tif (result === ABORT)\r\n\t\t\t\t\t\t\tenv.abortTxn();\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tenv.commitTxn();\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}, (error) => {\r\n\t\t\t\t\t\tenv.abortTxn();\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch(error) {\r\n\t\t\t\t\tenv.abortTxn();\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.transactionAsync(callback, true);\r\n\t\t},\r\n\t\ttransactionAsync(callback, asChild) {\r\n\t\t\tlet txnIndex;\r\n\t\t\tlet txnCallbacks;\r\n\t\t\tif (!nextResolution.callbacks) {\r\n\t\t\t\ttxnCallbacks = [asChild ? { callback, asChild } : callback];\r\n\t\t\t\tnextResolution.callbacks = txnCallbacks;\r\n\t\t\t\ttxnCallbacks.results = writeInstructions(8 | (this.strictAsyncOrder ? 0x100000 : 0), this)();\r\n\t\t\t\ttxnIndex = 0;\r\n\t\t\t} else {\r\n\t\t\t\ttxnCallbacks = lastQueuedResolution.callbacks;\r\n\t\t\t\ttxnIndex = txnCallbacks.push(asChild ? { callback, asChild } : callback) - 1;\r\n\t\t\t}\r\n\t\t\treturn txnCallbacks.results.then((results) => {\r\n\t\t\t\tlet result = txnCallbacks[txnIndex];\r\n\t\t\t\tif (result === CALLBACK_THREW)\r\n\t\t\t\t\tthrow txnCallbacks.errors[txnIndex];\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\t\t},\r\n\t\ttransactionSync(callback, flags) {\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\tif (!useWritemap && !this.cache)\r\n\t\t\t\t\t// already nested in a transaction, execute as child transaction (if possible) and return\r\n\t\t\t\t\treturn this.childTransaction(callback);\r\n\t\t\t\tlet result = callback(); // else just run in current transaction\r\n\t\t\t\tif (result == ABORT && !abortedNonChildTransactionWarn) {\r\n\t\t\t\t\tconsole.warn('Can not abort a transaction inside another transaction with ' + (this.cache ? 'caching enabled' : 'useWritemap enabled'));\r\n\t\t\t\t\tabortedNonChildTransactionWarn = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tthis.transactions++;\r\n\t\t\t\tenv.beginTxn(flags == undefined ? 3 : flags);\r\n\t\t\t\twriteTxn = env.writeTxn = {};\r\n\t\t\t\treturn when(callback(), (result) => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (result === ABORT)\r\n\t\t\t\t\t\t\tenv.abortTxn();\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tenv.commitTxn();\r\n\t\t\t\t\t\t\tresetReadTxn();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tenv.writeTxn = writeTxn = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t\ttry { env.abortTxn(); } catch(e) {}\r\n\t\t\t\t\tenv.writeTxn = writeTxn = null;\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t});\r\n\t\t\t} catch(error) {\r\n\t\t\t\ttry { env.abortTxn(); } catch(e) {}\r\n\t\t\t\tenv.writeTxn = writeTxn = null;\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttransactionSyncStart(callback) {\r\n\t\t\treturn this.transactionSync(callback, 0);\r\n\t\t},\r\n\t\ton(event, callback) {\r\n\t\t\tif (event == 'beforecommit') {\r\n\t\t\t\teventTurnBatching = true;\r\n\t\t\t\tbeforeCommitCallbacks.push(callback);\r\n\t\t\t} else if (event == 'aftercommit')\r\n\t\t\t\tafterCommitCallbacks.push(callback);\r\n\t\t}\r\n\t});\r\n\tLMDBStore.prototype.del = LMDBStore.prototype.remove;\r\n}\r\n\r\nclass Batch extends Array {\r\n\tconstructor(callback) {\r\n\t\tsuper();\r\n\t\tthis.callback = callback;\r\n\t}\r\n\tput(key, value) {\r\n\t\tthis.push({ type: 'put', key, value });\r\n\t}\r\n\tdel(key) {\r\n\t\tthis.push({ type: 'del', key });\r\n\t}\r\n\tclear() {\r\n\t\tthis.splice(0, this.length);\r\n\t}\r\n\twrite(callback) {\r\n\t\treturn this.callback(this, callback);\r\n\t}\r\n}\r\nexport function asBinary(buffer) {\r\n\treturn {\r\n\t\t[binaryBuffer]: buffer\r\n\t};\r\n}\r\n","export function levelup(store) {\r\n\treturn Object.assign(Object.create(store), {\r\n\t\tget(key, options, callback) {\r\n\t\t\tlet result = store.get(key);\r\n\t\t\tif (typeof options == 'function')\r\n\t\t\t\tcallback = options;\r\n\t\t\tif (callback) {\r\n\t\t\t\tif (result === undefined)\r\n\t\t\t\t\tcallback(new NotFoundError());\r\n\t\t\t\telse\r\n\t\t\t\t\tcallback(null, result);\r\n\t\t\t} else {\r\n\t\t\t\tif (result === undefined)\r\n\t\t\t\t\treturn Promise.reject(new NotFoundError());\r\n\t\t\t\telse\r\n\t\t\t\t\treturn Promise.resolve(result);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n}\r\nclass NotFoundError extends Error {\r\n\tconstructor(message) {\r\n\t\tsuper(message);\r\n\t\tthis.name = 'NotFoundError';\r\n\t\tthis.notFound = true;\r\n\t}\r\n}","import { WeakLRUCache } from 'weak-lru-cache/index.js';\r\nlet getLastVersion;\r\nconst mapGet = Map.prototype.get;\r\nexport const CachingStore = Store => class extends Store {\r\n\tconstructor(dbName, options) {\r\n\t\tsuper(dbName, options);\r\n\t\tif (!this.env.cacheCommitter) {\r\n\t\t\tthis.env.cacheCommitter = true;\r\n\t\t\tthis.on('aftercommit', ({ next, last }) => {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tlet store = next.store;\r\n\t\t\t\t\tif (store) {\r\n\t\t\t\t\t\tif (next.flag & 1)\r\n\t\t\t\t\t\t\tnext.store.cache.delete(next.key); // just delete it from the map\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlet expirationPriority = next.valueSize >> 10;\r\n\t\t\t\t\t\t\tlet cache = next.store.cache;\r\n\t\t\t\t\t\t\tlet entry = mapGet.call(cache, next.key);\r\n\t\t\t\t\t\t\tif (entry)\r\n\t\t\t\t\t\t\t\tcache.used(entry, expirationPriority); // this will enter it into the LRFU\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (next != last && (next = next.next))\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.db.cachingDb = this;\r\n\t\tthis.cache = new WeakLRUCache(options.cache);\r\n\t}\r\n\tget(id, cacheMode) {\r\n\t\tlet value = this.cache.getValue(id);\r\n\t\tif (value !== undefined)\r\n\t\t\treturn value;\r\n\t\tvalue = super.get(id);\r\n\t\tif (value && typeof value === 'object' && !cacheMode && typeof id !== 'object') {\r\n\t\t\tlet entry = this.cache.setValue(id, value, this.lastSize >> 10);\r\n\t\t\tif (this.useVersions) {\r\n\t\t\t\tentry.version = getLastVersion();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\tgetEntry(id, cacheMode) {\r\n\t\tlet entry = this.cache.get(id);\r\n\t\tif (entry)\r\n\t\t\treturn entry;\r\n\t\tlet value = super.get(id);\r\n\t\tif (value === undefined)\r\n\t\t\treturn;\r\n\t\tif (value && typeof value === 'object' && !cacheMode && typeof id !== 'object') {\r\n\t\t\tentry = this.cache.setValue(id, value, this.lastSize >> 10);\r\n\t\t} else {\r\n\t\t\tentry = { value };\r\n\t\t}\r\n\t\tif (this.useVersions) {\r\n\t\t\tentry.version = getLastVersion();\r\n\t\t}\r\n\t\treturn entry;\r\n\t}\r\n\tputEntry(id, entry, ifVersion) {\r\n\t\tlet result = super.put(id, entry.value, entry.version, ifVersion);\r\n\t\tif (typeof id === 'object')\r\n\t\t\treturn result;\r\n\t\tif (result && result.then)\r\n\t\t\tthis.cache.setManually(id, entry); // set manually so we can keep it pinned in memory until it is committed\r\n\t\telse // sync operation, immediately add to cache\r\n\t\t\tthis.cache.set(id, entry);\r\n\t}\r\n\tput(id, value, version, ifVersion) {\r\n\t\t// if (this.cache.get(id)) // if there is a cache entry, remove it from scheduledEntries and \r\n\t\tlet result = super.put(id, value, version, ifVersion);\r\n\t\tif (typeof id !== 'object') {\r\n\t\t\t// sync operation, immediately add to cache, otherwise keep it pinned in memory until it is committed\r\n\t\t\tlet entry = this.cache.setValue(id, value, !result || result.isSync ? 0 : -1);\r\n\t\t\tif (version !== undefined)\r\n\t\t\t\tentry.version = typeof version === 'object' ? version.version : version;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tputSync(id, value, version, ifVersion) {\r\n\t\tif (id !== 'object') {\r\n\t\t\t// sync operation, immediately add to cache, otherwise keep it pinned in memory until it is committed\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\tlet entry = this.cache.setValue(id, value);\r\n\t\t\t\tif (version !== undefined) {\r\n\t\t\t\t\tentry.version = typeof version === 'object' ? version.version : version;\r\n\t\t\t\t}\r\n\t\t\t} else // it is possible that  a value used to exist here\r\n\t\t\t\tthis.cache.delete(id);\r\n\t\t}\r\n\t\treturn super.putSync(id, value, version, ifVersion);\r\n\t}\r\n\tremove(id, ifVersion) {\r\n\t\tthis.cache.delete(id);\r\n\t\treturn super.remove(id, ifVersion);\r\n\t}\r\n\tremoveSync(id, ifVersion) {\r\n\t\tthis.cache.delete(id);\r\n\t\treturn super.removeSync(id, ifVersion);\r\n\t}\r\n\tclear() {\r\n\t\tthis.cache.clear();\r\n\t\tsuper.clear();\r\n\t}\r\n\tchildTransaction(execute) {\r\n\t\tthrow new Error('Child transactions are not supported in caching stores');\r\n\t}\r\n};\r\nexport function setGetLastVersion(get) {\r\n\tgetLastVersion = get;\r\n}\r\n","const SKIP = {};\r\nif (!Symbol.asyncIterator) {\r\n\tSymbol.asyncIterator = Symbol.for('Symbol.asyncIterator');\r\n}\r\n\r\nexport class ArrayLikeIterable {\r\n\tconstructor(sourceArray) {\r\n\t\tif (sourceArray) {\r\n\t\t\tthis[Symbol.iterator] = sourceArray[Symbol.iterator].bind(sourceArray);\r\n\t\t}\r\n\t}\r\n\tmap(func) {\r\n\t\tlet source = this;\r\n\t\tlet result = new ArrayLikeIterable();\r\n\t\tresult[Symbol.iterator] = (async) => {\r\n\t\t\tlet iterator = source[Symbol.iterator](async);\r\n\t\t\treturn {\r\n\t\t\t\tnext(resolvedResult) {\r\n\t\t\t\t\tlet result;\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tlet iteratorResult;\r\n\t\t\t\t\t\tif (resolvedResult) {\r\n\t\t\t\t\t\t\titeratorResult = resolvedResult;\r\n\t\t\t\t\t\t\tresolvedResult = null; // don't go in this branch on next iteration\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\titeratorResult = iterator.next();\r\n\t\t\t\t\t\t\tif (iteratorResult.then) {\r\n\t\t\t\t\t\t\t\treturn iteratorResult.then(iteratorResult => this.next(iteratorResult));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (iteratorResult.done === true) {\r\n\t\t\t\t\t\t\tthis.done = true;\r\n\t\t\t\t\t\t\treturn iteratorResult;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult = func(iteratorResult.value);\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\treturn result.then(result =>\r\n\t\t\t\t\t\t\t\tresult == SKIP ?\r\n\t\t\t\t\t\t\t\t\tthis.next() :\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tvalue: result\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while(result == SKIP)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: result\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\treturn() {\r\n\t\t\t\t\treturn iterator.return();\r\n\t\t\t\t},\r\n\t\t\t\tthrow() {\r\n\t\t\t\t\treturn iterator.throw();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn result;\r\n\t}\r\n\t[Symbol.asyncIterator]() {\r\n\t\treturn this[Symbol.iterator](true);\r\n\t}\r\n\tfilter(func) {\r\n\t\treturn this.map(element => func(element) ? element : SKIP);\r\n\t}\r\n\r\n\tforEach(callback) {\r\n\t\tlet iterator = this[Symbol.iterator]();\r\n\t\tlet result;\r\n\t\twhile ((result = iterator.next()).done !== true) {\r\n\t\t\tcallback(result.value);\r\n\t\t}\r\n\t}\r\n\tconcat(secondIterable) {\r\n\t\tlet concatIterable = new ArrayLikeIterable();\r\n\t\tconcatIterable[Symbol.iterator] = (async) => {\r\n\t\t\tlet iterator = this[Symbol.iterator]();\r\n\t\t\tlet isFirst = true;\r\n\t\t\tlet concatIterator = {\r\n\t\t\t\tnext() {\r\n\t\t\t\t\tlet result = iterator.next();\r\n\t\t\t\t\tif (isFirst && result.done) {\r\n\t\t\t\t\t\tisFirst = false;\r\n\t\t\t\t\t\titerator = secondIterable[Symbol.iterator](async);\r\n\t\t\t\t\t\treturn iterator.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t},\r\n\t\t\t\treturn() {\r\n\t\t\t\t\treturn iterator.return();\r\n\t\t\t\t},\r\n\t\t\t\tthrow() {\r\n\t\t\t\t\treturn iterator.throw();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn concatIterator;\r\n\t\t};\r\n\t\treturn concatIterable;\r\n\t}\r\n\ttoJSON() {\r\n\t\tif (this.asArray && this.asArray.forEach) {\r\n\t\t\treturn this.asArray;\r\n\t\t}\r\n\t\tthrow new Error('Can not serialize async iteratables without first calling resolveJSON');\r\n\t\t//return Array.from(this)\r\n\t}\r\n\tget asArray() {\r\n\t\tif (this._asArray)\r\n\t\t\treturn this._asArray;\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet iterator = this[Symbol.iterator](true);\r\n\t\t\tlet array = [];\r\n\t\t\tlet iterable = this;\r\n\t\t\tfunction next(result) {\r\n\t\t\t\twhile (result.done !== true) {\r\n\t\t\t\t\tif (result.then) {\r\n\t\t\t\t\t\treturn result.then(next);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tarray.push(result.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = iterator.next();\r\n\t\t\t\t}\r\n\t\t\t\tarray.iterable = iterable;\r\n\t\t\t\tresolve(iterable._asArray = array);\r\n\t\t\t}\r\n\t\t\tnext(iterator.next());\r\n\t\t});\r\n\t\tpromise.iterable = this;\r\n\t\treturn this._asArray || (this._asArray = promise);\r\n\t}\r\n\tresolveData() {\r\n\t\treturn this.asArray;\r\n\t}\r\n}\r\n","import { getAddress } from './native.js';\r\nimport { writeKey, readKey, enableNullTermination } from 'ordered-binary/index.js';\r\nenableNullTermination();\r\n\r\nconst writeUint32Key = (key, target, start) => {\r\n\t(target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length))).setUint32(start, key, true);\r\n\treturn start + 4;\r\n};\r\nconst readUint32Key = (target, start) => {\r\n\treturn (target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length))).getUint32(start, true);\r\n};\r\nconst writeBufferKey = (key, target, start) => {\r\n\tif (key.length > 1978)\r\n\t\tthrow new Error('Key buffer is too long');\r\n\ttarget.set(key, start);\r\n\treturn key.length + start;\r\n};\r\nconst readBufferKey = (target, start, end) => {\r\n\treturn Uint8ArraySlice.call(target, start, end);\r\n};\r\n\r\nexport function applyKeyHandling(store) {\r\n \tif (store.encoding == 'ordered-binary') {\r\n\t\tstore.encoder = store.decoder = {\r\n\t\t\twriteKey,\r\n\t\t\treadKey,\r\n\t\t};\r\n\t}\r\n\tif (store.encoder && store.encoder.writeKey && !store.encoder.encode) {\r\n\t\tstore.encoder.encode = function(value) {\r\n\t\t\tif (savePosition > 6200)\r\n\t\t\t\tallocateSaveBuffer();\r\n\t\t\tlet start = savePosition;\r\n\t\t\tsavePosition = writeKey(value, saveBuffer, start);\r\n\t\t\tsaveBuffer.start = start;\r\n\t\t\tsaveBuffer.end = savePosition;\r\n\t\t\tsavePosition = (savePosition + 7) & 0xfffff8;\r\n\t\t\treturn saveBuffer;\r\n\t\t};\r\n\t}\r\n\tif (store.decoder && store.decoder.readKey && !store.decoder.decode)\r\n\t\tstore.decoder.decode = function(buffer) { return this.readKey(buffer, 0, buffer.length); };\r\n\tif (store.keyIsUint32 || store.keyEncoding == 'uint32') {\r\n\t\tstore.writeKey = writeUint32Key;\r\n\t\tstore.readKey = readUint32Key;\r\n\t} else if (store.keyIsBuffer || store.keyEncoding == 'binary') {\r\n\t\tstore.writeKey = writeBufferKey;\r\n\t\tstore.readKey = readBufferKey;\r\n\t} else if (store.keyEncoder) {\r\n\t\tstore.writeKey = store.keyEncoder.writeKey;\r\n\t\tstore.readKey = store.keyEncoder.readKey;\r\n\t} else {\r\n\t\tstore.writeKey = writeKey;\r\n\t\tstore.readKey = readKey;\r\n\t}\r\n}\r\n\r\nlet saveBuffer, saveDataView, saveDataAddress;\r\nlet savePosition = 8000;\r\nfunction allocateSaveBuffer() {\r\n\tsaveBuffer = Buffer.alloc(8192);\r\n\tsaveBuffer.dataView = saveDataView = new DataView(saveBuffer.buffer, saveBuffer.byteOffset, saveBuffer.byteLength);\r\n\tsaveBuffer.buffer.address = getAddress(saveBuffer.buffer);\r\n\tsaveDataAddress = saveBuffer.buffer.address + saveBuffer.byteOffset;\r\n\tsavePosition = 0;\r\n\r\n}\r\nexport function saveKey(key, writeKey, saveTo) {\r\n\tif (savePosition > 6200) {\r\n\t\tallocateSaveBuffer();\r\n\t}\r\n\tlet start = savePosition;\r\n\tsavePosition = writeKey(key, saveBuffer, start + 4);\r\n\tsaveDataView.setUint32(start, savePosition - start - 4, true);\r\n\tsaveTo.saveBuffer = saveBuffer;\r\n\tsavePosition = (savePosition + 7) & 0xfffff8;\r\n\treturn start + saveDataAddress;\r\n}\r\n","import { ArrayLikeIterable }  from './util/ArrayLikeIterable.js';\r\nimport { getAddress, Cursor, setGlobalBuffer }  from './native.js';\r\nimport { saveKey }  from './keys.js';\r\nimport { writeKey }  from 'ordered-binary/index.js';\r\nimport { binaryBuffer } from './write.js';\r\nconst ITERATOR_DONE = { done: true, value: undefined };\r\nconst Uint8ArraySlice = Uint8Array.prototype.slice;\r\nlet getValueBytes = makeReusableBuffer(0);\r\nlet lastSize;\r\n\r\nexport function addReadMethods(LMDBStore, {\r\n\tgetReadTxn, env, keyBytes, keyBytesView, getLastVersion\r\n}) {\r\n\tlet readTxn, readTxnRenewed;\r\n\tlet renewId = 1;\r\n\tObject.assign(LMDBStore.prototype, {\r\n\t\tgetSizeBinaryFast(id) {\r\n\t\t\t(env.writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()));\r\n\t\t\tlastSize = this.db.getByBinary(this.writeKey(id, keyBytes, 0));\r\n\t\t},\r\n\t\tgetString(id) {\r\n\t\t\t(env.writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()));\r\n\t\t\tlet string = this.db.getStringByBinary(this.writeKey(id, keyBytes, 0));\r\n\t\t\tif (typeof string === 'number') { // indicates the buffer wasn't large enough\r\n\t\t\t\tthis._allocateGetBuffer(string);\r\n\t\t\t\t// and then try again\r\n\t\t\t\tstring = this.db.getStringByBinary(this.writeKey(id, keyBytes, 0));\r\n\t\t\t}\r\n\t\t\tif (string)\r\n\t\t\t\tlastSize = string.length;\r\n\t\t\treturn string;\r\n\t\t},\r\n\t\tgetBinaryFast(id) {\r\n\t\t\t(env.writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()));\r\n\t\t\tlastSize = this.db.getByBinary(this.writeKey(id, keyBytes, 0));\r\n\t\t\tlet compression = this.compression;\r\n\t\t\tlet bytes = compression ? compression.getValueBytes : getValueBytes;\r\n\t\t\tif (lastSize > bytes.maxLength) {\r\n\t\t\t\tif (lastSize === 0xffffffff)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tbytes = this._allocateGetBuffer(lastSize);\r\n\t\t\t\tlastSize = this.db.getByBinary(this.writeKey(id, keyBytes, 0));\r\n\t\t\t}\r\n\t\t\tbytes.length = lastSize;\r\n\t\t\treturn bytes;\r\n\t\t},\r\n\t\t_allocateGetBuffer(lastSize) {\r\n\t\t\tlet newLength = Math.min(Math.max(lastSize * 2, 0x1000), 0xfffffff8);\r\n\t\t\tlet bytes;\r\n\t\t\tif (this.compression) {\r\n\t\t\t\tlet dictionary = this.compression.dictionary || [];\r\n\t\t\t\tlet dictLength = (dictionary.length >> 3) << 3;// make sure it is word-aligned\r\n\t\t\t\tbytes = makeReusableBuffer(newLength + dictLength);\r\n\t\t\t\tbytes.set(dictionary) // copy dictionary into start\r\n\t\t\t\tthis.compression.setBuffer(bytes, dictLength);\r\n\t\t\t\t// the section after the dictionary is the target area for get values\r\n\t\t\t\tbytes = bytes.subarray(dictLength);\r\n\t\t\t\tbytes.maxLength = newLength;\r\n\t\t\t\tObject.defineProperty(bytes, 'length', { value: newLength, writable: true, configurable: true });\r\n\t\t\t\tthis.compression.getValueBytes = bytes;\r\n\t\t\t} else {\r\n\t\t\t\tbytes = makeReusableBuffer(newLength);\r\n\t\t\t\tsetGlobalBuffer(bytes);\r\n\t\t\t\tgetValueBytes = bytes;\r\n\t\t\t}\r\n\t\t\treturn bytes;\r\n\t\t},\r\n\t\tgetBinary(id) {\r\n\t\t\tlet fastBuffer = this.getBinaryFast(id);\r\n\t\t\treturn fastBuffer && Uint8ArraySlice.call(fastBuffer, 0, lastSize);\r\n\t\t},\r\n\t\tget(id) {\r\n\t\t\tif (this.decoder) {\r\n\t\t\t\tlet bytes = this.getBinaryFast(id);\r\n\t\t\t\treturn bytes && this.decoder.decode(bytes);\r\n\t\t\t}\r\n\t\t\tif (this.encoding == 'binary')\r\n\t\t\t\treturn this.getBinary(id);\r\n\r\n\t\t\tlet result = this.getString(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tif (this.encoding == 'json')\r\n\t\t\t\t\treturn JSON.parse(result);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tgetEntry(id) {\r\n\t\t\tlet value = this.get(id);\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\tif (this.useVersions)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\tversion: getLastVersion(),\r\n\t\t\t\t\t\t//size: lastSize\r\n\t\t\t\t\t};\r\n\t\t\t\telse\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t//size: lastSize\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tresetReadTxn() {\r\n\t\t\tresetReadTxn();\r\n\t\t},\r\n\t\tdoesExist(key, versionOrValue) {\r\n\t\t\tif (!env.writeTxn)\r\n\t\t\t\treadTxnRenewed ? readTxn : renewReadTxn();\r\n\t\t\tif (versionOrValue === undefined) {\r\n\t\t\t\tthis.getSizeBinaryFast(key);\r\n\t\t\t\treturn lastSize !== 0xffffffff;\r\n\t\t\t}\r\n\t\t\telse if (this.useVersions) {\r\n\t\t\t\tthis.getSizeBinaryFast(key);\r\n\t\t\t\treturn lastSize !== 0xffffffff && matches(getLastVersion(), versionOrValue);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (versionOrValue && versionOrValue[binaryBuffer])\r\n\t\t\t\t\tversionOrValue = versionOrValue[binaryBuffer];\r\n\t\t\t\telse if (this.encoder)\r\n\t\t\t\t\tversionOrValue = this.encoder.encode(versionOrValue);\r\n\t\t\t\tif (typeof versionOrValue == 'string')\r\n\t\t\t\t\tversionOrValue = Buffer.from(versionOrValue);\r\n\t\t\t\treturn this.getValuesCount(key, { start: versionOrValue, exactMatch: true}) > 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValues(key, options) {\r\n\t\t\tlet defaultOptions = {\r\n\t\t\t\tkey,\r\n\t\t\t\tvaluesForKey: true\r\n\t\t\t};\r\n\t\t\tif (options && options.snapshot === false)\r\n\t\t\t\tthrow new Error('Can not disable snapshots for getValues');\r\n\t\t\treturn this.getRange(options ? Object.assign(defaultOptions, options) : defaultOptions);\r\n\t\t},\r\n\t\tgetKeys(options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {};\r\n\t\t\toptions.values = false;\r\n\t\t\treturn this.getRange(options);\r\n\t\t},\r\n\t\tgetCount(options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {};\r\n\t\t\toptions.onlyCount = true;\r\n\t\t\treturn this.getRange(options)[Symbol.iterator]();\r\n\t\t},\r\n\t\tgetKeysCount(options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {};\r\n\t\t\toptions.onlyCount = true;\r\n\t\t\toptions.values = false;\r\n\t\t\treturn this.getRange(options)[Symbol.iterator]();\r\n\t\t},\r\n\t\tgetValuesCount(key, options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {};\r\n\t\t\toptions.key = key;\r\n\t\t\toptions.valuesForKey = true;\r\n\t\t\toptions.onlyCount = true;\r\n\t\t\treturn this.getRange(options)[Symbol.iterator]();\r\n\t\t},\r\n\t\tgetRange(options) {\r\n\t\t\tlet iterable = new ArrayLikeIterable();\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {};\r\n\t\t\tlet includeValues = options.values !== false;\r\n\t\t\tlet includeVersions = options.versions;\r\n\t\t\tlet valuesForKey = options.valuesForKey;\r\n\t\t\tlet limit = options.limit;\r\n\t\t\tlet db = this.db;\r\n\t\t\tlet snapshot = options.snapshot;\r\n\t\t\tlet compression = this.compression;\r\n\t\t\titerable[Symbol.iterator] = () => {\r\n\t\t\t\tlet currentKey = valuesForKey ? options.key : options.start;\r\n\t\t\t\tconst reverse = options.reverse;\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tlet cursor, cursorRenewId;\r\n\t\t\t\tlet txn;\r\n\t\t\t\tlet flags = (includeValues ? 0x100 : 0) | (reverse ? 0x400 : 0) |\r\n\t\t\t\t\t(valuesForKey ? 0x800 : 0) | (options.exactMatch ? 0x4000 : 0);\r\n\t\t\t\tfunction resetCursor() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (cursor)\r\n\t\t\t\t\t\t\tfinishCursor();\r\n\t\t\t\t\t\tlet writeTxn = env.writeTxn;\r\n\t\t\t\t\t\ttxn = writeTxn || (readTxnRenewed ? readTxn : renewReadTxn());\r\n\t\t\t\t\t\tcursor = !writeTxn && db.availableCursor;\r\n\t\t\t\t\t\tif (cursor) {\r\n\t\t\t\t\t\t\tdb.availableCursor = null;\r\n\t\t\t\t\t\t\tif (db.cursorTxn != txn)\r\n\t\t\t\t\t\t\t\tcursor.renew();\r\n\t\t\t\t\t\t\telse// if (db.currentRenewId != renewId)\r\n\t\t\t\t\t\t\t\tflags |= 0x2000;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcursor = new Cursor(db);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttxn.cursorCount = (txn.cursorCount || 0) + 1; // track transaction so we always use the same one\r\n\t\t\t\t\t\tif (snapshot === false) {\r\n\t\t\t\t\t\t\tcursorRenewId = renewId; // use shared read transaction\r\n\t\t\t\t\t\t\ttxn.renewingCursorCount = (txn.renewingCursorCount || 0) + 1; // need to know how many are renewing cursors\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tif (cursor) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tcursor.close();\r\n\t\t\t\t\t\t\t} catch(error) { }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresetCursor();\r\n\t\t\t\tlet store = this;\r\n\t\t\t\tif (options.onlyCount) {\r\n\t\t\t\t\tflags |= 0x1000;\r\n\t\t\t\t\tlet count = position(options.offset);\r\n\t\t\t\t\tfinishCursor();\r\n\t\t\t\t\treturn count;\r\n\t\t\t\t}\r\n\t\t\t\tfunction position(offset) {\r\n\t\t\t\t\tlet keySize = store.writeKey(currentKey, keyBytes, 0);\r\n\t\t\t\t\tlet endAddress;\r\n\t\t\t\t\tif (valuesForKey) {\r\n\t\t\t\t\t\tif (options.start === undefined && options.end === undefined)\r\n\t\t\t\t\t\t\tendAddress = 0;\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlet startAddress;\r\n\t\t\t\t\t\t\tif (store.encoder.writeKey) {\r\n\t\t\t\t\t\t\t\tstartAddress = saveKey(options.start, store.encoder.writeKey, iterable);\r\n\t\t\t\t\t\t\t\tkeyBytesView.setFloat64(2000, startAddress, true);\r\n\t\t\t\t\t\t\t\tendAddress = saveKey(options.end, store.encoder.writeKey, iterable);\r\n\t\t\t\t\t\t\t} else if ((!options.start || options.start instanceof Uint8Array) && (!options.end || options.end instanceof Uint8Array)) {\r\n\t\t\t\t\t\t\t\tstartAddress = saveKey(options.start, writeKey, iterable);\r\n\t\t\t\t\t\t\t\tkeyBytesView.setFloat64(2000, startAddress, true);\r\n\t\t\t\t\t\t\t\tendAddress = saveKey(options.end, writeKey, iterable);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error('Only key-based encoding is supported for start/end values');\r\n\t\t\t\t\t\t\t\tlet encoded = store.encoder.encode(options.start);\r\n\t\t\t\t\t\t\t\tlet bufferAddress = encoded.buffer.address || (encoded.buffer.address = getAddress(encoded) - encoded.byteOffset);\r\n\t\t\t\t\t\t\t\tstartAddress = bufferAddress + encoded.byteOffset;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tendAddress = saveKey(options.end, store.writeKey, iterable);\r\n\t\t\t\t\treturn cursor.position(flags, offset || 0, keySize, endAddress);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction finishCursor() {\r\n\t\t\t\t\tif (txn.isAborted)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tif (cursorRenewId)\r\n\t\t\t\t\t\ttxn.renewingCursorCount--;\r\n\t\t\t\t\tif (--txn.cursorCount <= 0 && txn.onlyCursor) {\r\n\t\t\t\t\t\tcursor.close();\r\n\t\t\t\t\t\ttxn.abort(); // this is no longer main read txn, abort it now that we are done\r\n\t\t\t\t\t\ttxn.isAborted = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (db.availableCursor || txn != readTxn)\r\n\t\t\t\t\t\t\tcursor.close();\r\n\t\t\t\t\t\telse { // try to reuse it\r\n\t\t\t\t\t\t\tdb.availableCursor = cursor;\r\n\t\t\t\t\t\t\tdb.cursorTxn = txn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tnext() {\r\n\t\t\t\t\t\tlet keySize, lastSize;\r\n\t\t\t\t\t\tif (cursorRenewId && cursorRenewId != renewId) {\r\n\t\t\t\t\t\t\tresetCursor();\r\n\t\t\t\t\t\t\tkeySize = position(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (count === 0) { // && includeValues) // on first entry, get current value if we need to\r\n\t\t\t\t\t\t\tkeySize = position(options.offset);\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\tkeySize = cursor.iterate();\r\n\t\t\t\t\t\tif (keySize === 0 ||\r\n\t\t\t\t\t\t\t\t(count++ >= limit)) {\r\n\t\t\t\t\t\t\tfinishCursor();\r\n\t\t\t\t\t\t\treturn ITERATOR_DONE;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!valuesForKey || snapshot === false)\r\n\t\t\t\t\t\t\tcurrentKey = store.readKey(keyBytes, 32, keySize + 32);\r\n\t\t\t\t\t\tif (includeValues) {\r\n\t\t\t\t\t\t\tlet value;\r\n\t\t\t\t\t\t\tlastSize = keyBytesView.getUint32(0, true);\r\n\t\t\t\t\t\t\tlet bytes = compression ? compression.getValueBytes : getValueBytes;\r\n\t\t\t\t\t\t\tif (lastSize > bytes.maxLength) {\r\n\t\t\t\t\t\t\t\tbytes = store._allocateGetBuffer(lastSize);\r\n\t\t\t\t\t\t\t\tcursor.getCurrentValue();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbytes.length = lastSize;\r\n\t\t\t\t\t\t\tif (store.decoder) {\r\n\t\t\t\t\t\t\t\tvalue = store.decoder.decode(bytes, lastSize);\r\n\t\t\t\t\t\t\t} else if (store.encoding == 'binary')\r\n\t\t\t\t\t\t\t\tvalue = Uint8ArraySlice.call(bytes, 0, lastSize);\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvalue = bytes.toString('utf8', 0, lastSize);\r\n\t\t\t\t\t\t\t\tif (store.encoding == 'json' && value)\r\n\t\t\t\t\t\t\t\t\tvalue = JSON.parse(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (includeVersions)\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\tkey: currentKey,\r\n\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\tversion: getLastVersion()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t};\r\n \t\t\t\t\t\t\telse if (valuesForKey)\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\tkey: currentKey,\r\n\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else if (includeVersions) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkey: currentKey,\r\n\t\t\t\t\t\t\t\t\tversion: getLastVersion()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tvalue: currentKey\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\treturn() {\r\n\t\t\t\t\t\tfinishCursor();\r\n\t\t\t\t\t\treturn ITERATOR_DONE;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthrow() {\r\n\t\t\t\t\t\tfinishCursor();\r\n\t\t\t\t\t\treturn ITERATOR_DONE;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\treturn iterable;\r\n\t\t},\r\n\t\tgetMany(keys, callback) {\r\n\t\t\tlet results = new Array(keys.length);\r\n\t\t\tfor (let i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tresults[i] = get.call(this, keys[i]);\r\n\t\t\t}\r\n\t\t\tif (callback)\r\n\t\t\t\tcallback(null, results);\r\n\t\t\treturn Promise.resolve(results); // we may eventually make this a true async operation\r\n\t\t},\r\n\t\tgetSharedBufferForGet(id) {\r\n\t\t\tlet txn = (env.writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()));\r\n\t\t\tlastSize = this.keyIsCompatibility ? txn.getBinaryShared(id) : this.db.get(this.writeKey(id, keyBytes, 0));\r\n\t\t\tif (lastSize === 0xffffffff) { // not found code\r\n\t\t\t\treturn; //undefined\r\n\t\t\t}\r\n\t\t\treturn lastSize;\r\n\t\t\tlastSize = keyBytesView.getUint32(0, true);\r\n\t\t\tlet bufferIndex = keyBytesView.getUint32(12, true);\r\n\t\t\tlastOffset = keyBytesView.getUint32(8, true);\r\n\t\t\tlet buffer = buffers[bufferIndex];\r\n\t\t\tlet startOffset;\r\n\t\t\tif (!buffer || lastOffset < (startOffset = buffer.startOffset) || (lastOffset + lastSize > startOffset + 0x100000000)) {\r\n\t\t\t\tif (buffer)\r\n\t\t\t\t\tenv.detachBuffer(buffer.buffer);\r\n\t\t\t\tstartOffset = (lastOffset >>> 16) * 0x10000;\r\n\t\t\t\tconsole.log('make buffer for address', bufferIndex * 0x100000000 + startOffset);\r\n\t\t\t\tbuffer = buffers[bufferIndex] = Buffer.from(getBufferForAddress(bufferIndex * 0x100000000 + startOffset));\r\n\t\t\t\tbuffer.startOffset = startOffset;\r\n\t\t\t}\r\n\t\t\tlastOffset -= startOffset;\r\n\t\t\treturn buffer;\r\n\t\t\treturn buffer.slice(lastOffset, lastOffset + lastSize);/*Uint8ArraySlice.call(buffer, lastOffset, lastOffset + lastSize)*/\r\n\t\t},\r\n\t\tclose(callback) {\r\n\t\t\tthis.db.close();\r\n\t\t\tif (this.isRoot) {\r\n\t\t\t\tif (readTxn) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treadTxn.abort();\r\n\t\t\t\t\t} catch(error) {}\r\n\t\t\t\t}\r\n\t\t\t\treadTxnRenewed = null;\r\n\t\t\t\tenv.close();\r\n\t\t\t}\r\n\t\t\tthis.status = 'closed';\r\n\t\t\tif (callback)\r\n\t\t\t\tcallback();\t\t\t\r\n\t\t},\r\n\t\tgetStats() {\r\n\t\t\treturn this.db.stat(readTxnRenewed ? readTxn : renewReadTxn());\r\n\t\t}\r\n\t});\r\n\tlet get = LMDBStore.prototype.get;\r\n\tfunction renewReadTxn() {\r\n\t\tif (readTxn)\r\n\t\t\treadTxn.renew();\r\n\t\telse\r\n\t\t\treadTxn = env.beginTxn(0x20000);\r\n\t\treadTxnRenewed = setImmediate(resetReadTxn);\r\n\t\treturn readTxn;\r\n\t}\r\n\tfunction resetReadTxn() {\r\n\t\tif (readTxnRenewed) {\r\n\t\t\trenewId++;\r\n\t\t\treadTxnRenewed = null;\r\n\t\t\tif (readTxn.cursorCount - (readTxn.renewingCursorCount || 0) > 0) {\r\n\t\t\t\treadTxn.onlyCursor = true;\r\n\t\t\t\treadTxn = null;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treadTxn.reset();\r\n\t\t}\r\n\t}\r\n}\r\nfunction matches(previousVersion, ifVersion){\r\n\tlet matches;\r\n\tif (previousVersion) {\r\n\t\tif (ifVersion) {\r\n\t\t\tmatches = previousVersion == ifVersion;\r\n\t\t} else {\r\n\t\t\tmatches = false;\r\n\t\t}\r\n\t} else {\r\n\t\tmatches = !ifVersion;\r\n\t}\r\n\treturn matches;\r\n}\r\nexport function makeReusableBuffer(size) {\r\n\tlet bytes = Buffer.alloc(size)\r\n\tbytes.maxLength = size;\r\n\tObject.defineProperty(bytes, 'length', { value: size, writable: true, configurable: true });\r\n\treturn bytes;\r\n}\r\n","import { extname, basename, dirname} from 'path';\r\nimport EventEmitter from 'events';\r\nimport { Env, Compression, getAddress, require, arch, fs } from './native.js';\r\nimport { CachingStore, setGetLastVersion } from './caching.js';\r\nimport { addReadMethods, makeReusableBuffer } from './read.js';\r\nimport { addWriteMethods } from './write.js';\r\nimport { applyKeyHandling } from './keys.js';\r\nimport { Encoder as MsgpackrEncoder } from 'msgpackr';\r\nsetGetLastVersion(getLastVersion);\r\nlet keyBytes, keyBytesView;\r\nconst buffers = [];\r\n\r\nconst DEFAULT_SYNC_BATCH_THRESHOLD = 200000000; // 200MB\r\nconst DEFAULT_IMMEDIATE_BATCH_THRESHOLD = 10000000; // 10MB\r\nconst DEFAULT_COMMIT_DELAY = 0;\r\nconst READING_TNX = {\r\n\treadOnly: true\r\n};\r\n\r\nexport const allDbs = new Map();\r\nlet env;\r\nlet defaultCompression;\r\nlet lastSize, lastOffset, lastVersion;\r\nlet abortedNonChildTransactionWarn;\r\nexport function open(path, options) {\r\n\tif (!keyBytes)\r\n\t\tallocateFixedBuffer();\r\n\tlet env = new Env();\r\n\tlet committingWrites;\r\n\tlet scheduledTransactions;\r\n\tlet scheduledOperations;\r\n\tlet asyncTransactionAfter = true, asyncTransactionStrictOrder;\r\n\tlet transactionWarned;\r\n\tif (typeof path == 'object' && !options) {\r\n\t\toptions = path;\r\n\t\tpath = options.path;\r\n\t}\r\n\tlet extension = extname(path);\r\n\tlet name = basename(path, extension);\r\n\tlet is32Bit = arch().endsWith('32');\r\n\tlet remapChunks = (options && options.remapChunks) || ((options && options.mapSize) ?\r\n\t\t(is32Bit && options.mapSize > 0x100000000) : // larger than fits in address space, must use dynamic maps\r\n\t\tis32Bit); // without a known map size, we default to being able to handle large data correctly/well*/\r\n\toptions = Object.assign({\r\n\t\tpath,\r\n\t\tnoSubdir: Boolean(extension),\r\n\t\tisRoot: true,\r\n\t\tmaxDbs: 12,\r\n\t\tremapChunks,\r\n\t\tkeyBytes,\r\n\t\t//overlappingSync: true,\r\n\t\t// default map size limit of 4 exabytes when using remapChunks, since it is not preallocated and we can\r\n\t\t// make it super huge.\r\n\t\tmapSize: remapChunks ? 0x10000000000000 :\r\n\t\t\t0x20000, // Otherwise we start small with 128KB\r\n\t}, options);\r\n\tif (options.asyncTransactionOrder == 'before') {\r\n\t\tconsole.warn('asyncTransactionOrder: \"before\" is deprecated');\r\n\t\tasyncTransactionAfter = false;\r\n\t} else if (options.asyncTransactionOrder == 'strict') {\r\n\t\tasyncTransactionStrictOrder = true;\r\n\t\tasyncTransactionAfter = false;\r\n\t}\r\n\tif (!fs.existsSync(options.noSubdir ? dirname(path) : path))\r\n\t\tfs.mkdirSync(options.noSubdir ? dirname(path) : path, { recursive: true });\r\n\tif (options.compression) {\r\n\t\tlet setDefault;\r\n\t\tif (options.compression == true) {\r\n\t\t\tif (defaultCompression)\r\n\t\t\t\toptions.compression = defaultCompression;\r\n\t\t\telse {\r\n\t\t\t\tlet compressionOptions = {\r\n\t\t\t\t\tthreshold: 1000,\r\n\t\t\t\t\tdictionary: fs.readFileSync(new URL('./dict/dict.txt',\r\n\t\t\t\t\t\timport.meta.url.replace(/dist[\\\\\\/]index.cjs$/, ''))),\r\n\t\t\t\t\tgetValueBytes: makeReusableBuffer(0),\r\n\t\t\t\t};\r\n\t\t\t\tdefaultCompression = options.compression = new Compression(compressionOptions);\r\n\t\t\t\tObject.assign(defaultCompression, compressionOptions);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet compressionOptions = Object.assign({\r\n\t\t\t\tthreshold: 1000,\r\n\t\t\t\tdictionary: fs.readFileSync(new URL('./dict/dict.txt', import.meta.url.replace(/dist[\\\\\\/]index.cjs$/, ''))),\r\n\t\t\t\tgetValueBytes: makeReusableBuffer(0),\r\n\t\t\t}, options.compression);\r\n\t\t\toptions.compression = new Compression(compressionOptions);\r\n\t\t\tObject.assign(options.compression, compressionOptions);\r\n\t\t}\r\n\t}\r\n\r\n\tif (options && options.clearOnStart) {\r\n\t\tconsole.info('Removing', path);\r\n\t\tfs.removeSync(path);\r\n\t\tconsole.info('Removed', path);\r\n\t}\r\n\tenv.open(options);\r\n\tenv.readerCheck(); // clear out any stale entries\r\n\tlet stores = [];\r\n\tclass LMDBStore extends EventEmitter {\r\n\t\tconstructor(dbName, dbOptions) {\r\n\t\t\tsuper();\r\n\t\t\tif (dbName === undefined)\r\n\t\t\t\tthrow new Error('Database name must be supplied in name property (may be null for root database)');\r\n\r\n\t\t\tconst openDB = () => {\r\n\t\t\t\tthis.db = env.openDbi(Object.assign({\r\n\t\t\t\t\tname: dbName,\r\n\t\t\t\t\tcreate: true,\r\n\t\t\t\t}, dbOptions));\r\n\t\t\t\tthis.db.name = dbName || null;\r\n\t\t\t};\r\n\t\t\tif (dbOptions.compression instanceof Compression) {\r\n\t\t\t\t// do nothing, already compression object\r\n\t\t\t} else if (dbOptions.compression && typeof dbOptions.compression == 'object')\r\n\t\t\t\tdbOptions.compression = new Compression(Object.assign({\r\n\t\t\t\t\tthreshold: 1000,\r\n\t\t\t\t\tdictionary: fs.readFileSync(require.resolve('./dict/dict.txt')),\r\n\t\t\t\t}), dbOptions.compression);\r\n\t\t\telse if (options.compression && dbOptions.compression !== false) \r\n\t\t\t\tdbOptions.compression = options.compression; // use the parent compression if available\r\n\r\n\t\t\tif (dbOptions.dupSort && (dbOptions.useVersions || dbOptions.cache)) {\r\n\t\t\t\tthrow new Error('The dupSort flag can not be combined with versions or caching');\r\n\t\t\t}\r\n\t\t\topenDB();\r\n\t\t\tthis.resetReadTxn(); // a read transaction becomes invalid after opening another db\r\n\t\t\tthis.name = dbName;\r\n\t\t\tthis.status = 'open';\r\n\t\t\tthis.env = env;\r\n\t\t\tthis.reads = 0;\r\n\t\t\tthis.writes = 0;\r\n\t\t\tthis.transactions = 0;\r\n\t\t\tthis.averageTransactionTime = 5;\r\n\t\t\tif (dbOptions.syncBatchThreshold)\r\n\t\t\t\tconsole.warn('syncBatchThreshold is no longer supported');\r\n\t\t\tif (dbOptions.immediateBatchThreshold)\r\n\t\t\t\tconsole.warn('immediateBatchThreshold is no longer supported');\r\n\t\t\tthis.commitDelay = DEFAULT_COMMIT_DELAY;\r\n\t\t\tObject.assign(this, { // these are the options that are inherited\r\n\t\t\t\tpath: options.path,\r\n\t\t\t\tencoding: options.encoding,\r\n\t\t\t\tstrictAsyncOrder: options.strictAsyncOrder,\r\n\t\t\t}, dbOptions);\r\n\t\t\tlet Encoder;\r\n\t\t\tif (this.encoder) {\r\n\t\t\t\tEncoder = this.encoder.Encoder;\r\n\t\t\t} else if (!this.encoding || this.encoding == 'msgpack' || this.encoding == 'cbor') {\r\n\t\t\t\tEncoder = (this.encoding == 'cbor' ? require('cbor-x').Encoder : MsgpackrEncoder);\r\n\t\t\t}\r\n\t\t\tif (Encoder) {\r\n\t\t\t\tthis.encoder = new Encoder(Object.assign(\r\n\t\t\t\t\tthis.sharedStructuresKey ? this.setupSharedStructures() : {\r\n\t\t\t\t\t\tcopyBuffers: true, // need to copy any embedded buffers that are found since we use unsafe buffers\r\n\t\t\t\t\t}, options, dbOptions));\r\n\t\t\t}\r\n\t\t\tif (this.encoding == 'json') {\r\n\t\t\t\tthis.encoder = {\r\n\t\t\t\t\tencode: JSON.stringify,\r\n\t\t\t\t};\r\n\t\t\t} else if (this.encoder) {\r\n\t\t\t\tthis.decoder = this.encoder\r\n\t\t\t}\r\n\t\t\tapplyKeyHandling(this);\r\n\t\t\tallDbs.set(dbName ? name + '-' + dbName : name, this);\r\n\t\t\tstores.push(this);\r\n\t\t}\r\n\t\topenDB(dbName, dbOptions) {\r\n\t\t\tif (typeof dbName == 'object' && !dbOptions) {\r\n\t\t\t\tdbOptions = dbName;\r\n\t\t\t\tdbName = options.name;\r\n\t\t\t} else\r\n\t\t\t\tdbOptions = dbOptions || {};\r\n\t\t\ttry {\r\n\t\t\t\treturn dbOptions.cache ?\r\n\t\t\t\t\tnew (CachingStore(LMDBStore))(dbName, dbOptions) :\r\n\t\t\t\t\tnew LMDBStore(dbName, dbOptions);\r\n\t\t\t} catch(error) {\r\n\t\t\t\tif (error.message.indexOf('MDB_DBS_FULL') > -1) {\r\n\t\t\t\t\terror.message += ' (increase your maxDbs option)';\r\n\t\t\t\t}\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t\topen(dbOptions, callback) {\r\n\t\t\tlet db = this.openDB(dbOptions);\r\n\t\t\tif (callback)\r\n\t\t\t\tcallback(null, db);\r\n\t\t\treturn db;\r\n\t\t}\r\n\t\ttransactionAsync(callback, asChild) {\r\n\t\t\tlet lastOperation;\r\n\t\t\tlet after, strictOrder;\r\n\t\t\tif (scheduledOperations) {\r\n\t\t\t\tlastOperation = asyncTransactionAfter ? scheduledOperations.appendAsyncTxn :\r\n\t\t\t\t\tscheduledOperations[asyncTransactionStrictOrder ? scheduledOperations.length - 1 : 0];\r\n\t\t\t} else {\r\n\t\t\t\tscheduledOperations = [];\r\n\t\t\t\tscheduledOperations.bytes = 0;\r\n\t\t\t}\r\n\t\t\tlet transactionSet;\r\n\t\t\tlet transactionSetIndex;\r\n\t\t\tif (lastOperation === true) { // continue last set of transactions\r\n\t\t\t\ttransactionSetIndex = scheduledTransactions.length - 1;\r\n\t\t\t\ttransactionSet = scheduledTransactions[transactionSetIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// for now we signify transactions as a true\r\n\t\t\t\tif (asyncTransactionAfter) // by default we add a flag to put transactions after other operations\r\n\t\t\t\t\tscheduledOperations.appendAsyncTxn = true;\r\n\t\t\t\telse if (asyncTransactionStrictOrder)\r\n\t\t\t\t\tscheduledOperations.push(true);\r\n\t\t\t\telse // in before mode, we put all the async transaction at the beginning\r\n\t\t\t\t\tscheduledOperations.unshift(true);\r\n\t\t\t\tif (!scheduledTransactions) {\r\n\t\t\t\t\tscheduledTransactions = [];\r\n\t\t\t\t}\r\n\t\t\t\ttransactionSetIndex = scheduledTransactions.push(transactionSet = []) - 1;\r\n\t\t\t}\r\n\t\t\tlet index = (transactionSet.push(asChild ?\r\n\t\t\t\t{asChild, callback } : callback) - 1) << 1;\r\n\t\t\treturn this.scheduleCommit().results.then((results) => {\r\n\t\t\t\tlet transactionResults = results.transactionResults[transactionSetIndex];\r\n\t\t\t\tlet error = transactionResults[index];\r\n\t\t\t\tif (error)\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\treturn transactionResults[index + 1];\r\n\t\t\t});\r\n\t\t}\r\n\t\tbackup(path) {\r\n\t\t\treturn new Promise((resolve, reject) => env.copy(path, false, (error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\tisOperational() {\r\n\t\t\treturn this.status == 'open';\r\n\t\t}\r\n\t\tsync(callback) {\r\n\t\t\treturn env.sync(callback || function(error) {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tdeleteDB() {\r\n\t\t\tconsole.warn('deleteDB() is deprecated, use drop or dropSync instead');\r\n\t\t\treturn this.dropSync();\r\n\t\t}\r\n\t\tdropSync() {\r\n\t\t\tthis.transactionSync(() =>\r\n\t\t\t\tthis.db.drop({\r\n\t\t\t\t\tjustFreePages: false\r\n\t\t\t\t}),\r\n\t\t\t{ abortable: false });\r\n\t\t}\r\n\t\tclear(callback) {\r\n\t\t\tif (typeof callback == 'function')\r\n\t\t\t\treturn this.clearAsync(callback);\r\n\t\t\tconsole.warn('clear() is deprecated, use clearAsync or clearSync instead');\r\n\t\t\tthis.clearSync();\r\n\t\t}\r\n\t\tclearSync() {\r\n\t\t\tif (this.encoder && this.encoder.structures)\r\n\t\t\t\tthis.encoder.structures = [];\r\n\t\t\tthis.transactionSync(() =>\r\n\t\t\t\tthis.db.drop({\r\n\t\t\t\t\tjustFreePages: true\r\n\t\t\t\t}),\r\n\t\t\t{ abortable: false });\r\n\t\t}\r\n\t\treaderCheck() {\r\n\t\t\treturn env.readerCheck();\r\n\t\t}\r\n\t\treaderList() {\r\n\t\t\treturn env.readerList().join('');\r\n\t\t}\r\n\t\tsetupSharedStructures() {\r\n\t\t\tconst getStructures = () => {\r\n\t\t\t\tlet lastVersion; // because we are doing a read here, we may need to save and restore the lastVersion from the last read\r\n\t\t\t\tif (this.useVersions)\r\n\t\t\t\t\tlastVersion = getLastVersion();\r\n\t\t\t\tlet buffer = this.getBinary(this.sharedStructuresKey);\r\n\t\t\t\tif (this.useVersions)\r\n\t\t\t\t\tsetLastVersion(lastVersion);\r\n\t\t\t\treturn buffer ? this.decoder.decode(buffer) : [];\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\tsaveStructures: (structures, previousLength) => {\r\n\t\t\t\t\treturn this.transactionSyncStart(() => {\r\n\t\t\t\t\t\tlet existingStructuresBuffer = this.getBinary(this.sharedStructuresKey);\r\n\t\t\t\t\t\tlet existingStructures = existingStructuresBuffer ? this.decoder.decode(existingStructuresBuffer) : [];\r\n\t\t\t\t\t\tif (existingStructures.length != previousLength)\r\n\t\t\t\t\t\t\treturn false; // it changed, we need to indicate that we couldn't update\r\n\t\t\t\t\t\tthis.put(this.sharedStructuresKey, structures);\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tgetStructures,\r\n\t\t\t\tcopyBuffers: true, // need to copy any embedded buffers that are found since we use unsafe buffers\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t// if caching class overrides putSync, don't want to double call the caching code\r\n\tconst putSync = LMDBStore.prototype.putSync;\r\n\tconst removeSync = LMDBStore.prototype.removeSync;\r\n\taddReadMethods(LMDBStore, { env, saveKey, keyBytes, keyBytesView, getLastVersion });\r\n\taddWriteMethods(LMDBStore, { env, fixedBuffer: keyBytes,\r\n\t\tresetReadTxn: LMDBStore.prototype.resetReadTxn, ...options });\r\n\tLMDBStore.prototype.supports = {\r\n\t\tpermanence: true,\r\n\t\tbufferKeys: true,\r\n\t\tpromises: true,\r\n\t\tsnapshots: true,\r\n\t\tclear: true,\r\n\t\tstatus: true,\r\n\t\tdeferredOpen: true,\r\n\t\topenCallback: true,\t\r\n\t};\r\n\treturn options.cache ?\r\n\t\tnew (CachingStore(LMDBStore))(options.name || null, options) :\r\n\t\tnew LMDBStore(options.name || null, options);\r\n}\r\n\r\n\r\nexport function getLastEntrySize() {\r\n\treturn lastSize;\r\n}\r\nexport function getLastVersion() {\r\n\treturn keyBytesView.getFloat64(16, true);\r\n}\r\n\r\nexport function setLastVersion(version) {\r\n\treturn keyBytesView.setFloat64(16, version, true);\r\n}\r\nlet saveBuffer, saveDataView, saveDataAddress;\r\nlet savePosition = 8000;\r\nfunction allocateSaveBuffer() {\r\n\tsaveBuffer = Buffer.alloc(8192);\r\n\tsaveBuffer.dataView = saveDataView = new DataView(saveBuffer.buffer, saveBuffer.byteOffset, saveBuffer.byteLength);\r\n\tsaveBuffer.buffer.address = getAddress(saveBuffer.buffer);\r\n\tsaveDataAddress = saveBuffer.buffer.address + saveBuffer.byteOffset;\r\n\tsavePosition = 0;\r\n\r\n}\r\nfunction allocateFixedBuffer() {\r\n\tkeyBytes = Buffer.allocUnsafeSlow(2048);\r\n\tconst keyBuffer = keyBytes.buffer;\r\n\tkeyBytesView = keyBytes.dataView = new DataView(keyBytes.buffer, 0, 2048); // max key size is actually 1978\r\n\tkeyBytes.uint32 = new Uint32Array(keyBuffer, 0, 512);\r\n\tkeyBytes.float64 = new Float64Array(keyBuffer, 0, 256);\r\n\tkeyBytes.uint32.address = keyBytes.address = keyBuffer.address = getAddress(keyBuffer);\r\n}\r\nfunction saveKey(key, writeKey, saveTo) {\r\n\tif (savePosition > 6200) {\r\n\t\tallocateSaveBuffer();\r\n\t}\r\n\tlet start = savePosition;\r\n\tsavePosition = writeKey(key, saveBuffer, start + 4);\r\n\tsaveDataView.setUint32(start, savePosition - start - 4, true);\r\n\tsaveTo.saveBuffer = saveBuffer;\r\n\tsavePosition = (savePosition + 7) & 0xfffff8;\r\n\treturn start + saveDataAddress;\r\n}\r\n","import { createRequire } from 'module';\r\nconst require = createRequire(import.meta.url);\r\nimport { fileURLToPath } from 'url';\r\nimport { dirname } from 'path';\r\nimport { setNativeFunctions } from './native.js';\r\nimport fs from 'fs';\r\nimport { arch } from 'os';\r\nlet nativeFunctions, dirName = dirname(fileURLToPath(import.meta.url)).replace(/dist$/, '');\r\ntry {\r\n\tconsole.log(dirName);\r\n\tnativeFunctions = require('node-gyp-build')(dirName);\r\n\tif (process.versions.modules == 93)\r\n\t\trequire('v8').setFlagsFromString('--turbo-fast-api-calls');\r\n} catch(error) {\r\n\tif (process.versions.modules == 93) {\r\n\t\t// use this abi version as the backup version without turbo-fast-api-calls enabled\r\n\t\tObject.defineProperty(process.versions, 'modules', { value: '92' });\r\n\t\ttry {\r\n\t\t\tnativeFunctions = require('node-gyp-build')(dirName);\r\n\t\t} catch(secondError) {\r\n\t\t\tthrow error;\r\n\t\t} finally {\r\n\t\t\tObject.defineProperty(process.versions, 'modules', { value: '93' });\r\n\t\t}\r\n\t} else\r\n\t\tthrow error;\r\n}\r\nnativeFunctions.require = require;\r\nnativeFunctions.arch = arch;\r\nnativeFunctions.fs = fs;\r\nsetNativeFunctions(nativeFunctions);\r\nexport { toBufferKey as keyValueToBuffer, compareKeys, compareKeys as compareKey, fromBufferKey as bufferToKeyValue } from 'ordered-binary/index.js';\r\nexport { ABORT, asBinary } from './write.js';\r\nexport { levelup } from './level.js';\r\nexport { open, getLastVersion, getLastEntrySize, setLastVersion, allDbs } from './index.js';\r\nimport { toBufferKey as keyValueToBuffer, compareKeys as compareKey, fromBufferKey as bufferToKeyValue } from 'ordered-binary/index.js';\r\nimport { open, getLastVersion } from './index.js';\r\nexport default {\r\n\topen, getLastVersion, compareKey, keyValueToBuffer, bufferToKeyValue\r\n};"],"names":["require","getAddress","WeakLRUCache","enableNullTermination","writeKey","readKey","Uint8ArraySlice","getLastVersion","lastSize","path","extname","basename","dirname","MsgpackrEncoder","saveKey","saveBuffer","saveDataView","saveDataAddress","savePosition","allocateSaveBuffer","createRequire","fileURLToPath","arch","fs","compareKey","keyValueToBuffer","bufferToKeyValue"],"mappings":"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"}